/* Novel Global Drag Handle Styles */

/* Base drag handle styles - the extension creates this element */
.drag-handle {
  position: absolute !important;
  width: 20px;
  height: 20px;
  cursor: grab;
  opacity: 0;
  transition: opacity 200ms ease-in-out;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  background-color: oklch(var(--muted) / 0.5);
  z-index: 100; /* High z-index to ensure visibility */
}

/* Drag handle icon - using Unicode character */
.drag-handle::before {
  content: '⋮⋮';
  font-size: 12px;
  line-height: 0.5;
  color: oklch(var(--foreground));
  font-weight: bold;
  letter-spacing: -2px;
}

/* Show on hover */
.drag-handle.show,
.drag-handle:hover {
  opacity: 1 !important;
  background-color: oklch(var(--muted));
}

/* Hover state with background */
.drag-handle:hover {
  background-color: oklch(var(--hover-2));
}

/* Active drag state */
.drag-handle:active,
.drag-handle.dragging {
  cursor: grabbing;
  background-color: oklch(var(--hover-3));
  opacity: 1 !important;
}

/* Ensure ProseMirror container has proper positioning */
.ProseMirror {
  position: relative;
}

/* Ensure all block elements are positioned for the handle to attach to */
.ProseMirror p,
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6,
.ProseMirror li,
.ProseMirror blockquote,
.ProseMirror pre,
.ProseMirror ul,
.ProseMirror ol {
  position: relative;
}

/* Drop indicator line */
.drop-cursor {
  position: relative;
}

.drop-cursor::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  top: -1px;
  height: 2px;
  background-color: oklch(var(--primary));
  pointer-events: none;
}

/* Alternative drop indicator class the extension might use */
.drag-handle-drop-indicator {
  position: absolute;
  left: 0;
  right: 0;
  height: 2px;
  background-color: oklch(var(--primary));
  pointer-events: none;
  z-index: 50;
}

/* Dragging state for the entire editor */
.ProseMirror.dragging {
  cursor: grabbing !important;
}

/* Element being dragged */
.ProseMirror .dragging {
  opacity: 0.5;
}

/* Hide placeholders during drag */
.ProseMirror.dragging .is-empty::before {
  opacity: 0 !important;
}

/* Accessibility: Ensure handle is keyboard accessible */
.drag-handle:focus {
  outline: 2px solid oklch(var(--ring));
  outline-offset: 2px;
  opacity: 1;
}

/* Dark mode adjustments are handled automatically via CSS variables */

/* Debug styles - uncomment to always show handles */
.drag-handle {
  opacity: 0.5 !important;
  background-color: red !important;
} 