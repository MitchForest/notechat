/* Notion-style Drag Handle */

/* Ensure the editor wrapper has proper positioning context */
#tiptap-editor-wrapper {
  position: relative !important;
}

/* The wrapper created by the drag handle plugin */
#tiptap-editor-wrapper > div[style*="position: absolute"] {
  /* Ensure it doesn't interfere with layout */
  pointer-events: none;
  z-index: 1000;
}

/* Main drag handle styling - Notion-like appearance */
.tiptap-drag-handle {
  position: absolute;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: grab;
  color: oklch(var(--muted-foreground));
  background-color: transparent;
  border-radius: 4px;
  opacity: 0;
  transition: opacity 0.15s ease, background-color 0.15s ease;
  
  /* Ensure handle is interactive */
  pointer-events: auto !important;
  z-index: 10;
}

/* Show handle on editor hover */
.editor-wrapper:hover .tiptap-drag-handle,
.ProseMirror:hover .tiptap-drag-handle {
  opacity: 1;
}

/* Handle hover state */
.tiptap-drag-handle:hover {
  background-color: oklch(var(--muted));
  color: oklch(var(--foreground));
}

/* Handle active/dragging state */
.tiptap-drag-handle:active,
.tiptap-drag-handle.dragging {
  cursor: grabbing;
  background-color: oklch(var(--muted) / 0.8);
  color: oklch(var(--foreground));
}

/* SVG icon sizing */
.tiptap-drag-handle svg {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
}

/* Ensure handle doesn't interfere with text selection */
.tiptap-drag-handle {
  user-select: none;
  -webkit-user-select: none;
}

/* Extend hover zone into left margin for better interaction */
.ProseMirror > p::before,
.ProseMirror > h1::before,
.ProseMirror > h2::before,
.ProseMirror > h3::before,
.ProseMirror > h4::before,
.ProseMirror > h5::before,
.ProseMirror > h6::before,
.ProseMirror > ul > li::before,
.ProseMirror > ol > li::before,
.ProseMirror > blockquote::before,
.ProseMirror > pre::before {
  content: '';
  position: absolute;
  left: -60px;
  top: 0;
  height: 100%;
  width: 60px;
  pointer-events: none;
  z-index: 1;
}

/* Activate pointer events only on hover */
.ProseMirror > *:hover::before {
  pointer-events: all;
}

/* Ensure blocks are positioned relative for pseudo-elements */
.ProseMirror > * {
  position: relative;
}

/* Fix placeholder positioning - ensure it stays in content area */
.ProseMirror .is-empty::before {
  position: relative !important;
  left: 0 !important;
  pointer-events: none !important;
  z-index: 2;
}

/* Drop cursor styling - more visible */
.ProseMirror-dropcursor {
  border: none;
  position: relative;
}

.ProseMirror-dropcursor::after {
  content: '';
  position: absolute;
  left: -2px;
  right: -2px;
  height: 2px;
  background: oklch(var(--primary));
  box-shadow: 0 0 0 1px oklch(var(--primary) / 0.3);
  pointer-events: none;
}

/* Selected node outline during drag */
.ProseMirror .ProseMirror-selectednode {
  outline: 2px solid oklch(var(--primary) / 0.3);
  outline-offset: 2px;
  border-radius: 4px;
  background-color: oklch(var(--primary) / 0.05);
}

/* Editor dragging state */
.ProseMirror.dragging {
  cursor: grabbing !important;
}

/* Hide placeholders during drag */
.ProseMirror.dragging .is-empty::before {
  opacity: 0 !important;
}

/* Tippy tooltip container adjustments */
.tippy-box[data-theme~='drag-handle'] {
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}

/* Ensure Tippy positioning doesn't get overridden */
[data-tippy-root] {
  z-index: 1000 !important;
} 