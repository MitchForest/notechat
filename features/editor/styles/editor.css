@import './spellcheck.css';
@import './block-system.css';
@import './drag-drop.css';
@import './ghost-text.css';
@import './block-system-final.css';

/* features/editor/styles/editor.css - Combined and fixed version */

/* ==========================================================================
   1. LAYOUT & STRUCTURE
   ========================================================================== */

.editor-wrapper {
  position: relative;
  overflow: visible !important; /* Prevents parent containers from clipping the handle */
}

/* ==========================================================================
   3. CORE CONTENT STYLES (Typography, Lists, etc.)
   ========================================================================== */
.ProseMirror {
  min-height: 200px;
  padding: 4px 40px 4px 80px; /* Increased gutter for the block handle */
  width: 100%;
  position: relative;
}

.ProseMirror:focus {
  outline: none;
}

.ProseMirror h1, .ProseMirror h2, .ProseMirror h3, .ProseMirror h4, .ProseMirror h5, .ProseMirror h6 {
  font-weight: bold;
  margin-bottom: 0.5em;
  line-height: 1.2;
}

.ProseMirror h1 { font-size: 2em; margin-top: 1.2em; }
.ProseMirror h2 { font-size: 1.5em; margin-top: 1.0em; }
.ProseMirror h3 { font-size: 1.25em; margin-top: 0.8em; }

.ProseMirror ul, .ProseMirror ol {
  padding-left: 1.5rem;
  margin: 1rem 0;
}
.ProseMirror ul { list-style: disc; }
.ProseMirror ol { list-style: decimal; }
.ProseMirror li { margin-top: 0.5rem; }

.ProseMirror blockquote {
  border-left: 3px solid hsl(var(--foreground) / 0.8);
  margin: 1.5rem 0;
  padding-left: 1rem;
  font-style: italic;
}

/* ==========================================================================
   4. CODE BLOCK & TASK LIST STYLES
   ========================================================================== */

.ProseMirror pre,
.ProseMirror pre.hljs,
.ProseMirror pre.code-block,
.ProseMirror pre[class*="language-"] {
  background: hsl(var(--muted)) !important;
  color: hsl(var(--muted-foreground)) !important;
  padding: 1rem !important;
  border-radius: 0.375rem !important;
  overflow-x: auto;
  margin: 0.5rem 0;
  font-family: 'Fira Code', 'Consolas', 'Monaco', monospace;
  font-size: 0.875rem;
  line-height: 1.5;
  border: 1px solid hsl(var(--border));
}
.ProseMirror pre[style] {
  background: hsl(var(--muted)) !important;
}

.ProseMirror pre code {
  background: transparent !important;
  color: inherit;
  padding: 0;
  font-size: inherit;
}

.ProseMirror ul[data-type="taskList"] {
  padding-left: 1.5rem;
  list-style: none;
  margin: 0.5rem 0;
}

.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.125rem 0;
  position: relative;
  min-height: 1.5rem;
}

.ProseMirror ul[data-type="taskList"] li input[type="checkbox"] {
  margin: 0;
  cursor: pointer;
  width: 16px;
  height: 16px;
  flex-shrink: 0;
}

.ProseMirror ul[data-type="taskList"] li > div,
.ProseMirror ul[data-type="taskList"] li > p {
  margin: 0 !important;
  padding: 0 !important;
  line-height: 1.5 !important;
  flex: 1;
}

.ProseMirror ul[data-type="taskList"] ul[data-type="taskList"] {
  margin-left: 1.5rem;
  margin-top: 0.25rem;
}

/* ==========================================================================
   5. SELECTION & UI STATES
   ========================================================================== */

.ProseMirror ::selection {
  background-color: hsl(var(--primary) / 0.3) !important;
  color: inherit !important;
}

.ProseMirror-selectednode {
  background-color: hsl(var(--primary) / 0.2);
  outline: 2px solid hsl(var(--primary));
}

.tippy-box {
  background-color: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
  color: hsl(var(--foreground));
}

/* ==========================================================================
   6. LEGACY STYLES (TO BE REMOVED)
   ========================================================================== */

/* NOTE: Block handle styles have been moved to block-system-final.css */
/* Keeping minimal legacy styles for backward compatibility during migration */

/* The element that is currently being dragged */
.dragging-block {
  opacity: 0.3 !important;
  background-color: hsl(var(--muted));
}

/* Dropdown Menu Styles - moved to block-system-final.css but kept for legacy */
@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Dragging States */
.ProseMirror.is-dragging {
  cursor: grabbing !important;
}

.ProseMirror.is-dragging * {
  cursor: grabbing !important;
  user-select: none !important;
}

/* Use margin for spacing instead of a hacky dead zone */
.ProseMirror > * {
  position: relative;
  margin-bottom: 0.25rem; /* Default space between blocks */
}

.ProseMirror h1 { margin-bottom: 1rem; }
.ProseMirror h2 { margin-bottom: 0.75rem; }
.ProseMirror h3 { margin-bottom: 0.5rem; }

/* 
  This is the single, correct rule for all placeholders.
  The :where() pseudo-class has zero specificity, ensuring this base style
  applies without interfering with other styles.
*/
.ProseMirror :where(.is-empty)::before {
  content: attr(data-placeholder);
  color: hsl(var(--muted-foreground));
  opacity: 0.8;
  float: left;
  height: 0;
  pointer-events: none;
}

/* Hide the placeholder on the element that is being dragged */
.ProseMirror.is-dragging .is-empty::before {
  display: none !important;
}

/* Visual feedback for the entire editor during a drag operation */
.ProseMirror.is-dragging::selection {
  background: transparent;
}

.ghost-text::after {
  content: attr(data-text);
  color: #adb5bd;
  font-style: italic;
  opacity: 0.6;
  pointer-events: none;
  animation: ghostFadeIn 200ms ease-in;
}

@keyframes ghostFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 0.6;
  }
}